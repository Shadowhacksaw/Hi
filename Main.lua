--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v90=0;while true do if (v90==0) then v19=v0(v3(v30,1,1));return "";end end else local v91=v2(v0(v30,16));if v19 then local v112=v5(v91,v19);v19=nil;return v112;else return v91;end end end);local function v20(v31,v32,v33) if v33 then local v92=(v31/((5 -3)^(v32-(2 -(1 + 0)))))%((3 -1)^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + (932 -(857 + (951 -(282 + 595)))))) ;return v92-(v92%(569 -(367 + 201))) ;else local v93=(929 -(214 + (2350 -(1523 + 114))))^(v32-1) ;return (((v31%(v93 + v93))>=v93) and (1 + 0)) or (0 + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 );v18=v18 + (1067 -(68 + 997)) ;return (v36 * (364 -108)) + v35 ;end local function v23() local v37=0 -0 ;local v38;local v39;local v40;local v41;while true do if (v37==(118 -(32 + 85))) then return (v41 * (16441815 + 335401)) + (v40 * (14533 + 51003)) + (v39 * ((4821 -3608) -(892 + 65))) + v38 ;end if (v37==(952 -(802 + 150))) then v38,v39,v40,v41=v1(v16,v18,v18 + 3 + 0 );v18=v18 + (9 -5) ;v37=1 + 0 ;end end end local function v24() local v42=0;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(2 -1)) then v45=1 -0 ;v46=(v20(v44,1 + 0 ,1017 -(915 + 82) ) * (((5 + 0) -3)^32)) + v43 ;v42=2;end if (v42==3) then if (v47==((772 -(201 + 571)) + 0)) then if (v46==0) then return v48 * ((1138 -(116 + 1022)) -(0 -0)) ;else v47=1188 -(1069 + 118) ;v45=(0 + 0) -0 ;end elseif (v47==(4477 -2430)) then return ((v46==((0 -0) + 0)) and (v48 * ((1 -0)/(0 + (0 -0))))) or (v48 * NaN) ;end return v8(v48,v47-(1814 -(368 + 423)) ) * (v45 + (v46/((6 -4)^(70 -(10 + 8))))) ;end if (v42==(0 -0)) then v43=v23();v44=v23();v42=443 -(416 + 26) ;end if (v42==(6 -4)) then v47=v20(v44,21,14 + 17 );v48=((v20(v44,56 -(883 -(814 + 45)) )==(439 -(145 + 293))) and  -((1061 -630) -(44 + 386))) or (1487 -(998 + 488)) ;v42=1 + 1 + 1 ;end end end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==(0 + 0)) then return "";end end v50=v3(v16,v18,(v18 + v49) -(886 -(261 + 624)) );v18=v18 + v49 ;local v51={};for v67=1, #v50 do v51[v67]=v2(v1(v3(v50,v67,v67)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return function(v94,v95,v96,v97,v98,v99,v100,v101,v102) local v103=(function() return 0 -0 ;end)();local v94=(function() return;end)();local v95=(function() return;end)();while true do if (v103~=(285 -(134 + 151))) then else v94=(function() return 0 -0 ;end)();v95=(function() return nil;end)();v103=(function() return 1 + 0 ;end)();end if (v103~=1) then else local v117=(function() return 0 + 0 ;end)();while true do if (v117==(0 -0)) then local v119=(function() return 0 -0 ;end)();while true do if (0~=v119) then else while true do if (v94~=(1262 -(1091 + 171))) then else v95=(function() return v96();end)();if (v97(v95, #"}", #"~")==(0 + 0)) then local v239=(function() return 1824 -(1195 + 629) ;end)();local v240=(function() return;end)();local v241=(function() return;end)();local v242=(function() return;end)();while true do if (v239==(1 -0)) then local v360=(function() return 0 -0 ;end)();while true do if (v360==(3 -2)) then v239=(function() return 2;end)();break;end if (v360~=(374 -(123 + 251))) then else v242=(function() return {v98(),v98(),nil,nil};end)();if (v240==0) then local v415=(function() return 698 -(208 + 490) ;end)();while true do if ((0 + 0)~=v415) then else v242[ #"asd"]=(function() return v98();end)();v242[ #"asd1"]=(function() return v98();end)();break;end end elseif (v240== #",") then v242[ #"91("]=(function() return v99();end)();elseif (v240==2) then v242[ #"19("]=(function() return v99() -((1 + 1)^(852 -(660 + 176))) ;end)();elseif (v240== #"xxx") then local v431=(function() return 0 + 0 ;end)();local v432=(function() return;end)();while true do if (v431==0) then v432=(function() return 0 + 0 ;end)();while true do if (v432~=0) then else v242[ #"xnx"]=(function() return v99() -((2 + 0)^(218 -(14 + 188))) ;end)();v242[ #"0313"]=(function() return v98();end)();break;end end break;end end end v360=(function() return 676 -(534 + 141) ;end)();end end end if (v239==(6 -3)) then if (v97(v241, #"19(", #"xxx")~= #">") then else v242[ #"http"]=(function() return v100[v242[ #"0836"]];end)();end v101[v102]=(function() return v242;end)();break;end if (v239==(2 -0)) then if (v97(v241, #"}", #"{")== #"}") then v242[1 + 1 ]=(function() return v100[v242[2 + 0 ]];end)();end if (v97(v241,1638 -(1373 + 263) ,1002 -(451 + 549) )~= #",") then else v242[ #"xnx"]=(function() return v100[v242[ #"19("]];end)();end v239=(function() return 1 + 2 ;end)();end if ((0 + 0)~=v239) then else local v362=(function() return 0;end)();while true do if (v362~=(0 -0)) then else local v408=(function() return 0 -0 ;end)();while true do if (1==v408) then v362=(function() return 1 -0 ;end)();break;end if (v408~=(0 -0)) then else v240=(function() return v97(v95,2, #"gha");end)();v241=(function() return v97(v95, #".dev",8 -2 );end)();v408=(function() return 342 -(218 + 123) ;end)();end end end if (v362==1) then v239=(function() return 1 + 0 ;end)();break;end end end end end break;end end return v94,v95,v96,v97,v98,v99,v100,v101,v102;end end end end end end end;end)();local v53=(function() return function(v104,v105,v106) local v107=(function() return 0;end)();local v108=(function() return;end)();while true do if (v107==0) then v108=(function() return 0 + 0 ;end)();while true do if (v108==(396 -(115 + 281))) then local v120=(function() return 0 + 0 ;end)();while true do if (v120==(560 -(306 + 254))) then v104[v105-#"," ]=(function() return v106();end)();return v104,v105,v106;end end end end break;end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v69= #":",v58 do local v70=(function() return 0 + 0 ;end)();local v71=(function() return;end)();local v72=(function() return;end)();local v73=(function() return;end)();while true do if (v70==(0 -0)) then v71=(function() return 0 -0 ;end)();v72=(function() return nil;end)();v70=(function() return 1;end)();end if ((1468 -(899 + 568))==v70) then v73=(function() return nil;end)();while true do if (v71==(3 -2)) then if (v72== #" ") then v73=(function() return v21()~=(867 -(550 + 317)) ;end)();elseif (v72==(2 -0)) then v73=(function() return v24();end)();elseif (v72== #"-19") then v73=(function() return v25();end)();end v59[v69]=(function() return v73;end)();break;end if (v71==0) then v72=(function() return v21();end)();v73=(function() return nil;end)();v71=(function() return 1 -0 ;end)();end end break;end end end v57[ #"xxx"]=(function() return v21();end)();for v74= #"\\",v23() do FlatIdent_44839,Descriptor,v21,v20,v22,v23,v59,v54,v74=(function() return v52(FlatIdent_44839,Descriptor,v21,v20,v22,v23,v59,v54,v74);end)();end for v75= #"|",v23() do v55,v75,v28=(function() return v53(v55,v75,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[604 -(268 + 335) ];local v65=v61[292 -(60 + 230) ];local v66=v61[575 -(426 + 146) ];return function(...) local v76=v64;local v77=v65;local v78=v66;local v79=v27;local v80=1 + 0 ;local v81= -(1457 -(282 + 1174));local v82={};local v83={...};local v84=v12("#",...) -((553 -(83 + 468)) -1) ;local v85={};local v86={};for v109=(1806 -(1202 + 604)) + 0 ,v84 do if (v109>=v78) then v82[v109-v78 ]=v83[v109 + (1025 -(706 + 318)) ];else v86[v109]=v83[v109 + (1252 -(721 + 530)) ];end end local v87=(v84-v78) + (1272 -(945 + 326)) ;local v88;local v89;while true do v88=v76[v80];v89=v88[2 -1 ];if ((v89<=(35 + 4)) or (2219>2834)) then if ((v89<=(719 -((1265 -994) + 429))) or (802>1683)) then if (v89<=9) then if (v89<=(4 + 0)) then if ((90<1065) and (v89<=(1501 -(1408 + 92)))) then if (v89>0) then v86[v88[1088 -(461 + 625) ]]=v63[v88[1291 -(993 + 295) ]];else v86[v88[1 + 1 ]]=v62[v88[1174 -(418 + 753) ]];end elseif (v89<=2) then v86[v88[1 + 1 ]]=v86[v88[1 + 2 ]][v88[2 + 2 ]];elseif (v89>(1 + 2)) then v86[v88[531 -(406 + 123) ]][v86[v88[(2948 -1176) -(1749 + 20) ]]]=v88[4];else local v245=0 + 0 ;local v246;while true do if (v245==0) then v246=v88[1324 -(1249 + 73) ];do return v13(v86,v246,v81);end break;end end end elseif (v89<=(3 + 3)) then if ((4802==4802) and (v89>(13 -8))) then v86[v88[1147 -(466 + 679) ]]();else local v128=v88[4 -2 ];v86[v128]=v86[v128]();end elseif ((v89<=((344 -(45 + 280)) -12)) or (2280<=511)) then v80=v88[1903 -(106 + 1794) ];elseif (v89==(3 + 5)) then v86[v88[1 + 1 + 0 ]]=v86[v88[3]][v86[v88[4]]];else local v249=(0 + 0) -0 ;local v250;local v251;local v252;while true do if ((5 -3)==v249) then if (v251>(114 -(4 + 110))) then if ((v252<=v86[v250 + (585 -(57 + 527)) ]) or (1676<=463)) then local v409=(522 + 905) -(41 + 1386) ;while true do if (v409==(103 -(17 + 86))) then v80=v88[3 + 0 ];v86[v250 + 3 ]=v252;break;end end end elseif (v252>=v86[v250 + (1 -0) ]) then v80=v88[8 -(3 + 2) ];v86[v250 + (169 -(122 + 44)) ]=v252;end break;end if ((3869==3869) and ((1 -0)==v249)) then v252=v86[v250] + v251 ;v86[v250]=v252;v249=6 -4 ;end if (v249==(0 + 0)) then v250=v88[1 + 1 ];v251=v86[v250 + 2 ];v249=1 -(0 + 0) ;end end end elseif (v89<=14) then if (v89<=11) then if (v89==(75 -(30 + 35))) then v86[v88[2 + 0 ]][v86[v88[3]]]=v86[v88[(2334 -1073) -(1043 + 214) ]];else v86[v88[7 -5 ]][v88[3]]=v86[v88[1216 -(323 + 889) ]];end elseif ((1158<=2613) and (v89<=(31 -19))) then local v135=v88[2];local v136,v137=v79(v86[v135](v86[v135 + (581 -(361 + 219)) ]));v81=(v137 + v135) -1 ;local v138=320 -(53 + 267) ;for v212=v135,v81 do v138=v138 + 1 ;v86[v212]=v136[v138];end elseif (v89==((1914 -(340 + 1571)) + 10)) then v86[v88[(164 + 251) -(15 + 398) ]]=v29(v77[v88[985 -((1790 -(1733 + 39)) + 964) ]],nil,v63);else local v254=v88[7 -5 ];v86[v254](v13(v86,v254 + 1 ,v81));end elseif ((v89<=(10 + 6)) or (2364<=1999)) then if (v89>(10 + 5)) then local v139=(2335 -1485) -(20 + 830) ;local v140;local v141;local v142;while true do if (v139==0) then v140=v88[2 + 0 ];v141=v86[v140];v139=127 -(116 + 10) ;end if (1==v139) then v142=v88[1 + (1036 -(125 + 909)) ];for v334=739 -((2490 -(1096 + 852)) + 88 + 108) ,v142 do v141[v334]=v86[v140 + v334 ];end break;end end else v86[v88[3 -1 ]][v88[3]]=v86[v88[2 + 2 ]];end elseif (v89<=(9 + 8)) then v80=v88[3];elseif ((v89>((9 -2) + 11)) or (4922<194)) then v86[v88[4 -2 ]]=v86[v88[7 -4 ]] + v88[1555 -(1093 + 33 + 425) ] ;else v86[v88[407 -(118 + (799 -(409 + 103))) ]]=v62[v88[239 -(46 + 190) ]];end elseif (v89<=29) then if ((v89<=(93 -69)) or (2091<31)) then if (v89<=21) then if ((v89>20) or (2430>=4872)) then local v146=v88[(1218 -(51 + 44)) -(118 + 1003) ];local v147=v86[v146 + (5 -(1 + 2)) ];local v148=v86[v146] + v147 ;v86[v146]=v148;if ((v147>(377 -(142 + 235))) or (4770<1735)) then if ((v148<=v86[v146 + 1 ]) or (4439<=2350)) then local v337=0 -0 ;while true do if ((v337==0) or (4479<4466)) then v80=v88[1 + 2 ];v86[v146 + (980 -(553 + 424)) ]=v148;break;end end end elseif (v148>=v86[v146 + (1 -0) ]) then v80=v88[3 + 0 ];v86[v146 + 3 + 0 ]=v148;end else v86[v88[2 + (1317 -(1114 + 203)) ]]=v63[v88[2 + 1 ]];end elseif (v89<=22) then v86[v88[2 + 0 ]]={};elseif (v89>23) then local v258=0 -0 ;local v259;while true do if ((2547>1225) and (v258==(0 -0))) then v259=v88[4 -2 ];v86[v259]=v86[v259](v86[v259 + 1 + 0 ]);break;end end else v86[v88[9 -7 ]]=v86[v88[(1482 -(228 + 498)) -(239 + 514) ]]%v88[4] ;end elseif (v89<=(10 + 16)) then if (v89==(1354 -(797 + 532))) then v86[v88[2 + 0 + 0 ]]=v88[2 + 1 ];elseif (v86[v88[4 -(2 + 0) ]]==v88[4]) then v80=v80 + (1203 -(373 + (1492 -(174 + 489)))) ;else v80=v88[(1912 -1178) -(476 + 255) ];end elseif (v89<=(1157 -(369 + 761))) then local v155=0 + 0 ;local v156;local v157;while true do if (v155==(1 -0)) then for v340=v156 + (1906 -(830 + 1075)) ,v88[5 -2 ] do v7(v157,v86[v340]);end break;end if (v155==(238 -(64 + 174))) then v156=v88[1 + 1 ];v157=v86[v156];v155=1 -(524 -(303 + 221)) ;end end elseif ((4671>2674) and (v89==(364 -(144 + 192)))) then local v262=216 -(42 + 174) ;local v263;local v264;local v265;local v266;while true do if ((v262==2) or (3696<3327)) then for v379=v263,v81 do v266=v266 + 1 ;v86[v379]=v264[v266];end break;end if (v262==(1 + 0)) then v81=(v265 + v263) -1 ;v266=0 + 0 ;v262=2;end if ((v262==(0 + 0)) or (4542==2970)) then v263=v88[1506 -(363 + 1141) ];v264,v265=v79(v86[v263](v13(v86,v263 + (1581 -((2452 -(231 + 1038)) + 397)) ,v88[3])));v262=2 -1 ;end end else for v311=v88[2 + 0 ],v88[3 + (1162 -(171 + 991)) ] do v86[v311]=nil;end end elseif (v89<=34) then if ((252<=1977) and (v89<=(24 + 7))) then if (v89>(2005 -(1913 + 62))) then local v158=v88[2 + (0 -0) ];v86[v158](v13(v86,v158 + (2 -1) ,v81));else v86[v88[(5195 -3260) -(565 + 1368) ]]={};end elseif (v89<=(120 -88)) then v86[v88[4 -2 ]]= #v86[v88[1664 -(1477 + 184) ]];elseif ((v89>(44 -11)) or (1436==3775)) then v86[v88[2]]= #v86[v88[3 + 0 ]];else local v268=0;local v269;local v270;while true do if (v268==1) then for v382=857 -(564 + 234 + 58) , #v85 do local v383=v85[v382];for v393=0 -(0 -0) , #v383 do local v394=0 -0 ;local v395;local v396;local v397;while true do if ((v394==(2 -1)) or (1618<930)) then v397=v395[306 -(244 + 60) ];if ((v396==v86) and (v397>=v269)) then v270[v397]=v396[v397];v395[1 + (0 -0) ]=v270;end break;end if ((4723>4153) and (v394==(476 -(41 + 435)))) then v395=v383[v393];v396=v395[1002 -(938 + 63) ];v394=1 + 0 ;end end end end break;end if (v268==0) then v269=v88[2];v270={};v268=1126 -(936 + 189) ;end end end elseif (v89<=(12 + 24)) then if (v89>(1648 -((4837 -3272) + 48))) then v86[v88[2 + 0 ]]();else local v161=v88[1140 -(782 + 356) ];v86[v161]=v86[v161](v13(v86,v161 + (268 -(176 + 91)) ,v88[7 -(1252 -(111 + 1137)) ]));end elseif (v89<=(53 -16)) then local v163=1092 -(975 + 117) ;local v164;while true do if (v163==(1875 -(157 + 1718))) then v164=v88[2 + 0 ];v86[v164]=v86[v164](v86[v164 + (3 -(160 -(91 + 67))) ]);break;end end elseif (v89>(129 -91)) then local v271=v88[2];do return v86[v271](v13(v86,v271 + 1 ,v88[3]));end else v86[v88[1020 -((2074 -1377) + 321) ]]=v86[v88[3]]%v86[v88[10 -6 ]] ;end elseif (v89<=59) then if (v89<=((26 + 77) -54)) then if (v89<=44) then if (v89<=(94 -53)) then if (v89>(16 + (547 -(423 + 100)))) then local v165=v88[3 -1 ];local v166,v167=v79(v86[v165](v13(v86,v165 + 1 ,v88[7 -4 ])));v81=(v167 + v165) -(1228 -(3 + 319 + 905)) ;local v168=0;for v215=v165,v81 do v168=v168 + (612 -(602 + 9)) ;v86[v215]=v166[v168];end else local v169=v88[2];local v170,v171=v79(v86[v169](v13(v86,v169 + 1 ,v81)));v81=(v171 + v169) -(1190 -(449 + 740)) ;local v172=0;for v218=v169,v81 do v172=v172 + (873 -(826 + 46)) ;v86[v218]=v170[v172];end end elseif (v89<=42) then v86[v88[949 -(245 + 702) ]][v86[v88[(24 -15) -(4 + 2) ]]]=v86[v88[2 + 2 ]];elseif (v89>(1941 -(260 + 1638))) then local v273=440 -(382 + 58) ;local v274;local v275;while true do if (v273==0) then v274=v88[6 -4 ];v275=v86[v88[774 -(326 + 445) ]];v273=(4 -3) + 0 ;end if ((v273==(1 -(0 -0))) or (3654>=4654)) then v86[v274 + 1 ]=v275;v86[v274]=v275[v88[11 -(16 -9) ]];break;end end else local v276=v88[1207 -(902 + 303) ];v86[v276]=v86[v276](v13(v86,v276 + (1 -0) ,v88[6 -3 ]));end elseif (v89<=(4 + 42)) then if (v89==(1735 -(1121 + (1280 -(530 + 181))))) then local v175=0;local v176;local v177;while true do if ((214 -(22 + 192))==v175) then v176=v88[883 -(614 + 267) ];v177=v86[v88[686 -(483 + 200) ]];v175=1464 -(1404 + 59) ;end if ((951<=1496) and (v175==(2 -(33 -(19 + 13))))) then v86[v176 + (1 -0) ]=v177;v86[v176]=v177[v88[769 -(468 + 297) ]];break;end end else local v178=0;local v179;local v180;local v181;while true do if ((562 -(334 + (370 -142)))==v178) then v179=v88[4 -2 ];v180=v86[v179];v178=3 -(5 -3) ;end if ((1==v178) or (1736==571)) then v181=v86[v179 + 1 + 1 ];if ((v181>(0 -0)) or (896>4769)) then if ((v180>v86[v179 + (1 -0) ]) or (1045<=1020)) then v80=v88[1 + 2 ];else v86[v179 + (239 -(141 + 95)) ]=v180;end elseif (v180<v86[v179 + 1 + 0 ]) then v80=v88[7 -4 ];else v86[v179 + (6 -(4 -1)) ]=v180;end break;end end end elseif ((v89<=((24 -12) + 35)) or (1160<=328)) then local v182=v88[2];local v183,v184=v79(v86[v182](v86[v182 + 1 ]));v81=(v184 + v182) -((1814 -(1293 + 519)) -1) ;local v185=0;for v221=v182,v81 do v185=v185 + 1 ;v86[v221]=v183[v185];end elseif (v89>48) then do return;end else local v278=v88[2];local v279=v86[v278];local v280=v88[3 + 0 ];for v323=1,v280 do v279[v323]=v86[v278 + v323 ];end end elseif (v89<=(29 + 25)) then if (v89<=(71 -20)) then if ((3808>2924) and (v89>50)) then v86[v88[2 + 0 ]]=v88[166 -(92 + 71) ]~=(0 + 0) ;else for v224=v88[(3 -1) -0 ],v88[768 -(574 + 191) ] do v86[v224]=nil;end end elseif (v89<=(43 + 9)) then local v187=v77[v88[7 -4 ]];local v188;local v189={};v188=v10({},{__index=function(v226,v227) local v228=v189[v227];return v228[1 + 0 ][v228[851 -(254 + 595) ]];end,__newindex=function(v229,v230,v231) local v232=v189[v230];v232[127 -(55 + 71) ][v232[2 -0 ]]=v231;end});for v234=1,v88[1794 -(573 + 1217) ] do v80=v80 + (2 -(1 -0)) ;local v235=v76[v80];if (v235[4 -3 ]==(6 + 69)) then v189[v234-(1 -(0 -0)) ]={v86,v235[3 -0 ]};else v189[v234-(1 + 0) ]={v62,v235[51 -(25 + 23) ]};end v85[ #v85 + 1 + 0 ]=v189;end v86[v88[(628 + 1260) -(580 + 347 + 959) ]]=v29(v187,v188,v63);elseif ((3891<4919) and (v89==(178 -125))) then local v281=732 -(16 + 716) ;local v282;while true do if ((v281==(0 -(1096 -(709 + 387)))) or (2234<=1502)) then v282=v88[99 -(11 + 86) ];do return v86[v282](v13(v86,v282 + (2 -1) ,v88[288 -(175 + 110) ]));end break;end end else v86[v88[4 -2 ]]=v86[v88[(1872 -(673 + 1185)) -11 ]]%v86[v88[(5220 -3420) -(503 + 1293) ]] ;end elseif (v89<=56) then if (v89==(153 -98)) then if ( not v86[v88[2 + 0 ]] or (2512<432)) then v80=v80 + (1062 -(810 + 251)) ;else v80=v88[3 + 0 ];end else v86[v88[2]]=v86[v88[1 + 2 ]][v88[4 + 0 ]];end elseif ((v89<=(590 -(43 + 490))) or (1848==865)) then local v193=0 -0 ;local v194;local v195;local v196;while true do if (v193==(735 -((1169 -458) + 22))) then for v341=3 -2 ,v88[863 -(240 + 619) ] do local v342=0 + 0 ;local v343;while true do if ((((1 + 0) -0)==v342) or (4682<=4541)) then if (v343[1 + 0 ]==(1819 -(1344 + 400))) then v196[v341-1 ]={v86,v343[2 + 1 ]};else v196[v341-(4 -3) ]={v62,v343[409 -(183 + 223) ]};end v85[ #v85 + (1 -(0 + 0)) ]=v196;break;end if ((v342==0) or (3026>=4046)) then v80=v80 + 1 + 0 ;v343=v76[v80];v342=1 + 0 ;end end end v86[v88[339 -((19 -9) + 327) ]]=v29(v194,v195,v63);break;end if (v193==1) then v196={};v195=v10({},{__index=function(v344,v345) local v346=0 + 0 ;local v347;while true do if ((2008>638) and (v346==(338 -(118 + 220)))) then v347=v196[v345];return v347[1 + 0 ][v347[451 -(108 + 341) ]];end end end,__newindex=function(v348,v349,v350) local v351=v196[v349];v351[1 + 0 ][v351[8 -6 ]]=v350;end});v193=1495 -((1395 -684) + 782) ;end if ((1775<=3233) and (v193==(0 -0))) then v194=v77[v88[472 -(270 + 199) ]];v195=nil;v193=1 + 0 ;end end elseif (v89==(1877 -(580 + 1239))) then v86[v88[2]][v86[v88[8 -5 ]]]=v88[4 + 0 ];else local v287=v88[1 + 1 ];local v288={};for v330=1 + 0 , #v85 do local v331=v85[v330];for v353=0 -0 , #v331 do local v354=0 + (1880 -(446 + 1434)) ;local v355;local v356;local v357;while true do if (v354==(1167 -(645 + 522))) then v355=v331[v353];v356=v355[1791 -(1010 + 780) ];v354=1;end if (v354==(1 + 0)) then v357=v355[2];if ((v356==v86) and (v357>=v287)) then local v414=0 -0 ;while true do if ((v414==(0 -0)) or (4543==1997)) then v288[v357]=v356[v357];v355[1284 -(1040 + 243) ]=v288;break;end end end break;end end end end end elseif (v89<=(1905 -(1045 + 791))) then if ((v89<=((480 -319) -97)) or (3102<728)) then if (v89<=(92 -31)) then if (v89==(565 -(351 + 154))) then v86[v88[1576 -(1281 + 293) ]]=v88[269 -(28 + 238) ] + v86[v88[8 -4 ]] ;else local v198=1559 -(1381 + 178) ;local v199;while true do if (v198==((1847 -(559 + 1288)) + 0)) then v199=v88[2];v86[v199]=v86[v199]();break;end end end elseif ((345==345) and (v89<=62)) then if (v86[v88[2 + (1931 -(609 + 1322)) ]]==v88[2 + 2 ]) then v80=v80 + (3 -2) ;else v80=v88[2 + 1 ];end elseif ((v89==(533 -(381 + 89))) or (2827<378)) then local v290=v88[2];do return v13(v86,v290,v81);end else local v291=v88[2];v86[v291](v86[v291 + 1 + 0 ]);end elseif (v89<=(45 + 21)) then if (v89==65) then local v200=v88[2 -(454 -(13 + 441)) ];local v201,v202=v79(v86[v200](v13(v86,v200 + 1 ,v81)));v81=(v202 + v200) -(1157 -(1074 + 82)) ;local v203=0 -0 ;for v237=v200,v81 do local v238=0;while true do if (v238==(1784 -(214 + 1570))) then v203=v203 + (1456 -(990 + (1737 -1272))) ;v86[v237]=v201[v203];break;end end end else v86[v88[1 + 1 ]]=v86[v88[2 + (2 -1) ]];end elseif ((v89<=(66 + 1)) or (3476<2597)) then v86[v88[7 -5 ]]=v88[1729 -(1668 + 58) ] + v86[v88[630 -(512 + 114) ]] ;elseif (v89>(177 -109)) then v86[v88[(14 -11) -1 ]]=v88[10 -7 ]~=0 ;else v86[v88[1 + 1 ]]=v86[v88[1 + 2 ]]%v88[4 + 0 ] ;end elseif (v89<=(249 -175)) then if (v89<=(2065 -(109 + 1885))) then if (v89==(1539 -(1269 + 200))) then v86[v88[2]]=v86[v88[5 -2 ]] + v88[819 -(98 + 717) ] ;else local v208=v88[828 -(802 + 24) ];v86[v208](v86[v208 + 1 ]);end elseif (v89<=(123 -51)) then if ((3079<4794) and  not v86[v88[2 -0 ]]) then v80=v80 + 1 + 0 ;else v80=v88[3 + 0 ];end elseif (v89==(12 + 61)) then local v295=v88[1 + 1 ];local v296=v86[v295];local v297=v86[v295 + 2 ];if (v297>(0 -(0 + 0))) then if (v296>v86[v295 + ((10 -7) -2) ]) then v80=v88[3];else v86[v295 + 3 ]=v296;end elseif ((4854>4464) and (v296<v86[v295 + 1 ])) then v80=v88[2 + 1 + 0 ];else v86[v295 + 3 ]=v296;end else do return;end end elseif (v89<=77) then if ((v89<=(31 + 44)) or (4912==3758)) then v86[v88[2 + 0 ]]=v86[v88[2 + 1 ]];elseif (v89==(56 + 20)) then v86[v88[1 + 1 ]]=v88[1436 -(797 + 636) ];else local v300=v88[9 -7 ];v86[v300]=v86[v300](v13(v86,v300 + (1620 -(1427 + 192)) ,v81));end elseif (v89<=((83 -55) + 50)) then v86[v88[4 -2 ]]=v29(v77[v88[3]],nil,v63);elseif (v89==(72 + 4 + 3)) then local v302=0;local v303;while true do if (v302==0) then v303=v88[1 + 1 ];v86[v303]=v86[v303](v13(v86,v303 + (327 -(192 + 134)) ,v81));break;end end else v86[v88[1278 -(316 + 960) ]]=v86[v88[2 + 1 ]][v86[v88[(7 -3) + 0 ]]];end v80=v80 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
